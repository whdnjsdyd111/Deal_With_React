            6.2 데이터 배열을 컴포넌트 배열로 변환하기

6.1 에서 제곱하여 새로운 배열을 만들었는데 똑같은 원리로 기존 배열을 컴포넌트로 구성된 배열을 생성할 수 있다.


        6.2.1 컴포넌트 수정

금방 만든 IterationSample 컴포넌트를 다음과 같이 수정하자.


import React from 'react';

const IterationSample = () => {
    const names = ['눈사람', '얼음', '눈', '바람'];
    const nameList = names.map(name => <li>{name}</li>);
    return <ul>{nameList}</ul>;
};

export default IterationSample;


문자열로 구성된 배열을 선언한다. 그 배열을 사용하여 <li>...</li> JSX 코드로 된 배열을 새로 생성 후 nameList에 담는다.
map 함수에서 JSX를 작성할 때는 아서 다룬 예처럼 DOM 요소를 작성해도 되고, 컴포넌트를 사용해도 된다.


        6.2.2 App 컴포넌트에서 예제 컴포넌트 렌더링

App 컴포넌트에서 기존 코드를 지우고, IterationSample 컴포넌트를 불러와서 렌더링하자.


import React, { Component } from 'react';
import IterationSample from './IterationSample';

class App extends Component {
  render() {
    return (
      <IterationSample />
    );
  }
}

export default App;


코드를 저장하고 확인해보자.
원하는대로 렌더링 되는 것을 볼 수 있다. 하지만 아직 완벽하지는 않다. 개발자 도구에서 콘솔을 확인해보자.

"key" prop 이 없다는 경고 메시지를 표시한다. key가 무엇일까?