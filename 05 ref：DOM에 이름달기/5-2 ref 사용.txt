            5.2 ref 사용

이제 프로젝트에서 ref을 사용해보자. ref를 사용하는 방법은 두 가지이다.


        5.2.1 콜백 함수를 통한 ref 설정

ref를 만드는 가장 기본적인 방법은 콜백 함수를 사용하는 것이다.
ref를 달고자 하는 요소에 ref라는 콜백 함수를 props로 전달해주면 된다. 이 콜백 함수는 ref 값을 파라미터로 전달받는다.
그리고 함수 내부에 파라미터로 받은 ref를 컴포넌트의 멤버 변수로 설정해준다.


사용 예시

<input ref={(ref) => { this.input.ref }} />


이렇게 하면 앞으로 this.input은 input 요소의 DOM을 가리킨다.
ref의 이름은 원하는 것으로 자유롭게 지정할 수 있다. DOM 타입과 관계없이 this.superman = ref 처럼 마음대로 지정할 수 있다.


        5.2.2 createRef 를 통한 ref 설정

ref를 만드는 또 다른 방법은 리액트에 내장되어 있는 createRef라는 함수를 사용하는 것이다.
이 함수를 사용해서 만들면 더 적은 코드로 쉽게 구현할 수 있다.
이 기능은 리액트 v16.8 부터 도입됐고 이전 버전에서는 작동하지 않는다.

예시 코드를 보자.


import React, { Component } from 'react';

class RefSample extends Component {
    input = React.createRef();

    handleFocus = () => {
        this.input.current.focus();
    }

    render() {
        return (
            <div>
                <input ref={this.input} />
            </div>
        );
    }
}

export default RefSample;


createRef를 사용하여 ref를 만들려면 우선 컴포넌트 내부에서 멤버 변수로 React.createRef()를 담아 줘야 한다.
그리고 해당 멤버 변수를 ref를 달고자 하는 요소에 ref props로 넣어 주면 ref 설정이 완료된다.
설정한 뒤 ref를 설정해 준 DOM에 접근하려면 this.input.current를 조회하면 된다.
콜백 함수를 사용할 때와 다른 점은 뒷부분에 .current를 넣어 줘야 한다는 것이다.

지금까지 콜백 함수 혹은 createRef를 사용하여 ref를 만드는 방법을 배워 봤다.
앞으로 두 가지 방법 중에서 편한 방법을 사용하면 된다.
이번 장에선 주로 콜백 함수를 사용하는 방식으로 ref를 다룰 것이다.


        5.2.3 적용

이전에 만든 ValidationSample 컴포넌트의 렌더링을 보면 input에 포커스가 되면 텍스트 커서가 깜빡인다.
버튼을 누르면 포커스가 버튼으로 넘어가면서 왼쪽 input 요소에는 텍스트 커서가 보이지 않는다.
버튼을 한 번 누르면, 포커스가 다시 input 쪽으로 자동으로 넘어가도록 해보자.

        5.2.3.1 input에 ref 달기

5.2.1 절에 배운 대로 콜백 함수를 사용하여 ValidationSample 컴포넌트에도 ref를 달아보자.


<input
    ref={(ref) => this.input = ref}
    ...
    />


        5.2.3.2 버튼 onClick 이벤트 코드 수정

버튼에서 onClick 이벤트가 발생할 때 input에 포커스를 주도록 코드를 수정해보자.
이제 this.input이 컴포넌트 내부의 input 요소를 가리키고 있으니, 일반 DOM을 다루듯 코드를 작성하면 된다.


handleButtonClick = () => {
    this.setState({
        clicked: true,
        validated: this.state.password === '0000'
    });
    this.input.focus();
}


코드를 저장하고 결과를 확인해보자.