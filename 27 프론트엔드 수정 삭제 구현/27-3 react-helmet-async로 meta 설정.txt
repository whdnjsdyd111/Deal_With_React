            27.3 react-helmet-async 로 meta 태그 설정하기

현재 우리가 만든 웹 애플리케이션을 브라우저에서 열어 보면 상단에 React App 이라는 제목이 나타난다.

구글, 네이버 같은 검색 엔진에서 웹 페이지를 수집할 때는 meta 태그를 읽는데,
이 meta 태그를 리액트 앱에서 설정하는 방법을 알아본다.

우선 yarn을 사용하여 클라이언트 프로젝트에 react-helmet-async 라는 라이브러리를 설치하자.


$ yarn add react-helmet-async


다음으로 src/index.js 파일을 열어서 HelmetProvider 컴포넌트로 App 컴포넌트를 감싸자.


...
import { HelmetProvider } from "react-helmet-async";

...

ReactDOM.render(
    <Provider store={store}>
        <BrowserRouter>
            <HelmetProvider>
                <App />
            </HelmetProvider>
        </BrowserRouter>
    </Provider>,
    document.getElementById('root'),
);

...


그러고 나서 meta 태그를 설정하고 싶은 곳에 Helmet 컴포넌트를 사용하면 된다. App 컴포넌트를 다음과 같이 수정한다.


import React from 'react';
import { Route } from 'react-router-dom';
import PostListPage from './pages/PostListPage';
import LoginPage from './pages/LoginPage';
import RegisterPage from './pages/RegisterPage';
import WritePage from './pages/WritePage';
import PostPage from './pages/PostPage';
import { Helmet } from "react-helmet-async";

const App = () => {
    return (
        <>
            <Helmet>
                <title>REACTERS</title>
            </Helmet>
            <Route component={PostListPage} path={['/@:username', '/']} exact />
            <Route component={LoginPage} path="/login" />
            <Route component={RegisterPage} path="/register" />
            <Route component={WritePage} path="/write" />
            <Route component={PostPage} path="/@:username/:postId" />
        </>
    );
};

export default App;


이제 브라우저에서 페이지 제목이 REACTERS 로 바뀐 것을 볼 수 있다.

react-helmet-async 에서는 더 깊숙한 곳에 위치한 Helmet이 우선권을 차지한다.
예를 들어 App과 WritePage 에서 Helmet을 사용할 경우, WritePage는 App 내부에 들어 있기 때문에
WritePage에서 설정하는 title 값이 나타난다.

WritePage에서도 Helmet을 한번 사용해보자.


import React from 'react';
import Responsive from '../components/common/Responsive';
import EditorContainer from '../containers/write/EditorContainer';
import TagBoxContainer from '../containers/write/TagBoxContainer';
import WriteActionButtonsContainer from '../containers/write/WriteActionButtonsContainer';
import { Helmet } from "react-helmet-async";

const WritePage = () => {
    return (
        <Responsive>
            <Helmet>
                <title>새 글 작성하기 - REACTERS</title>
            </Helmet>
            <EditorContainer />
            <TagBoxContainer />
            <WriteActionButtonsContainer />
        </Responsive>
    )
};

export default WritePage;


코드를 저장한 후 /write 페이지로 들어가 본다. 새 글 작성하기 로 바뀐 것을 확인해보자.

그 다음에는 PostViewer 컴포넌트에서 Helmet을 사용하여 포스트의 제목이 페이지의 제목이 되도록 설정해 보자.


import React from 'react';
import styled from 'styled-components';
import palette from '../../lib/styles/palette';
import Responsive from '../common/Responsive';
import SubInfo from '../common/SubInfo';
import Tags from '../common/Tags';
import { Helmet } from "react-helmet-async";

...

const PostViewer = ({ post, error, loading, actionButtons }) => {
    ...

    return (
        <PostViewerBlock>
            <Helmet>
                <title>{title} - REACTERS</title>
            </Helmet>
            <PostHead>
                <h1>{title}</h1>
                <SubInfo
                    username={user.username}
                    publishedDate={publishedDate}
                    hasMarginTop
                    />
                <Tags tags={tags} />
            </PostHead>
            {actionButtons}
            <PostContent dangerouslySetInnerHTML={{ __html: body }} />
        </PostViewerBlock>
    );
};

export default PostViewer;


Helmet을 적용한 후 아무 포스트나 열어 보자. 페이지 제목이 바뀐 것을 확인할 수 있다.